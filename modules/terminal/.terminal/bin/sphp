#!/bin/bash

if [[ $(id -u) -eq 0 ]]; then
    echo "The command \"sphp\" should not be executed as root or via sudo directly."
    echo "When a service requires root access, you will be prompted for a password as needed."
    exit 1
fi

function show_help_and_exit() {
    echo "Usage: sphp [phpversion] <options>"
    echo "Versions installed:"
    brew list | grep '^php\(\@.*\)\?$' | xargs -I % sh -c 'echo "% <`brew info % | head -n 1 | pcregrep -o1 "([0-9]+\.[0-9]+)\.[0-9]+\s\(bottled\)"`>"' | while read -r line; do
        echo " - phpversion: $line"
    done
    exit 1
}

if [ $# -lt 1 ]; then
    show_help_and_exit
fi

REMAIN_ARGS=()
for i in "$@"; do
    case $i in
        -c=*|--httpd-conf=*)
            SPHP_HTTPD_CONF="${i#*=}"
            shift
            ;;
        *)
            REMAIN_ARGS+=("$1")
            shift
            ;;
    esac
done
set -- "${REMAIN_ARGS[@]}"

HTTPD_CONF="${SPHP_HTTPD_CONF:-`httpd -V | grep -i server_config_file | cut -d '"' -f 2`}"
if [ ! -f $HTTPD_CONF ]; then
    echo "httpd conf file not found: $HTTPD_CONF"
    exit 1
fi

HTTPD_BIN=$(which httpd)
if [ $? -ne 0 ]; then
    echo "Try \`brew install httpd\` first."
    exit 1
fi

CURRENT_VERSION=$(php -r "error_reporting(0); echo str_replace('.', '', substr(phpversion(), 0, 3));")
NEW_VERSION="${1/\./}"
OLD_MAJOR=${CURRENT_VERSION:0:1}
NEW_MAJOR=${NEW_VERSION:0:1}
NEW_MINOR=${NEW_VERSION:1:1}

brew list php$NEW_VERSION > /dev/null 2>&1
if [ $? -ne 0 ]; then
    echo "PHP version $NEW_MAJOR.$NEW_MINOR was not found."
    echo "Try \`brew install php${NEW_VERSION}\` first."
    exit 1
fi

echo "PHP version $NEW_VERSION found"

# Check if new version is already the current version.
if [ "${NEW_VERSION}" == "${CURRENT_VERSION}" ]; then
    echo -n "PHP version ${NEW_VERSION} is already being used. Continue by reloading? (y/n) "
    while true; do
        read -n 1 yn
        case $yn in
            [Yy]* ) echo && break;;
            [Nn]* ) echo && exit 1;;
        esac
    done
fi

# echo "Unlinking old binaries..."
brew unlink php$CURRENT_VERSION 2> /dev/null > /dev/null

# echo "Linking new binaries..."
brew link php$NEW_VERSION --force 2> /dev/null > /dev/null

echo "Disabling old httpd module..."
sudo sed -i -e "/LoadModule php${OLD_MAJOR}_module/s/^#*/#/" $HTTPD_CONF

echo "Enabling new httpd module..."
if grep "LoadModule php${NEW_MAJOR}_module" $HTTPD_CONF > /dev/null; then
    sudo sed -i -e "/LoadModule php${NEW_MAJOR}_module/s/^#//" $HTTPD_CONF
else
    brew info php${NEW_VERSION} | grep "LoadModule" | xargs | sudo tee -a $HTTPD_CONF > /dev/null
fi

echo "Updating version file..."

pgrep -f httpd > /dev/null 2>&1
if [ $? -eq 0 ]; then
    echo "Restarting homebrew httpd..."
    sudo pkill -9 -f httpd
    sudo $HTTPD_BIN -k restart > /dev/null 2>&1
fi

echo "Done."

# Show PHP CLI version for verification.
echo && php -v
